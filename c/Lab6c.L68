00008000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 2022-11-11 2:44:34 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Lab6c
00000000                             3  * Written by : Ankush Madharha
00000000                             4  * Date       : 11/11/2022
00000000                             5  * Description: compute c = (a+2)^2
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000  =0000000E                  8  aOffset     EQU     14  
00000000  =0000000C                  9  bOffset     EQU     12
00000000  =00000008                 10  cOffset     EQU     8
00000000  =FFFFFFFC                 11  xOffset     EQU     -4
00000000  =FFFFFFF8                 12  yOffset     EQU     -8
00000000  =FFFFFFF4                 13  zOffset     EQU     -12   
00000000                            14  
00008000                            15          ORG         $8000
00008000  3F3C 0004                 16  START:  MOVE.W      #4,-(A7)        ;push a = 4
00008004  3F3C 0005                 17          MOVE.W      #5,-(A7)        ;push b = 5
00008008  4879 00009000             18          PEA         c               ;push address of c
0000800E  6100 000A                 19          BSR         sumSquared      ; call subroutine
00008012  4FEF 0008                 20          LEA         8(A7),A7        ;remove parameters from stack        
00008016                            21  
00008016  FFFF FFFF                 22          SIMHALT           
0000801A                            23  
0000801A                            24  sumSquared
0000801A  4E56 FFF4                 25          LINK        A6,#-12         ;allocates storage for three longwards
0000801E  48E7 8080                 26          MOVEM.L     D0/A0,-(A7)     ;save working register
00008022                            27          
00008022  302E 000E                 28          MOVE.W      aOffset(A6),D0  ;get a
00008026  C1C0                      29          MULS        D0,D0           ;compute a*a
00008028  2D40 FFFC                 30          MOVE.L      D0,xOffset(A6)  ;x = a*a
0000802C                            31          
0000802C  4280                      32          CLR.L       D0              ;clear D0
0000802E                            33          
0000802E  302E 000C                 34          MOVE.W      bOffset(A6),D0  ;get b
00008032  C1C0                      35          MULS        D0,D0           ;compute b*b
00008034  2D40 FFF8                 36          MOVE.L      D0,yOffset(A6)  ;y = b*b
00008038                            37          
00008038  4280                      38          CLR.L       D0              ;clear D0
0000803A                            39          
0000803A  303C 0002                 40          MOVE.W      #2,D0           ;get 2
0000803E  C1EE 000E                 41          MULS        aOffset(A6),D0  ;2 * a
00008042  C1EE 000C                 42          MULS        bOffset(A6),D0  ;2 * a * b
00008046  2D40 FFF4                 43          MOVE.L      D0,zOffset(A6)  ;z = 2 * a * b
0000804A                            44          
0000804A  4280                      45          CLR.L       D0              ;clear D0
0000804C                            46          
0000804C  202E FFFC                 47          MOVE.L      xOffset(A6),D0  ;get x
00008050  D0AE FFF8                 48          ADD.L       yOffset(A6),D0  ;x + y
00008054  D0AE FFF4                 49          ADD.L       zOffset(A6),D0  ;x + y + z
00008058                            50          
00008058  206E 0008                 51          MOVEA.L     cOffset(A6),A0  ;get address of c
0000805C  2080                      52          MOVE.L      D0,(A0)         ;save x+y+z in c
0000805E                            53          
0000805E  4CDF 0101                 54          MOVEM.L     (A7)+,A0/D0     ;restore working registers
00008062  4E5E                      55          UNLK        A6              ;deallocate stack frame
00008064                            56          
00008064  4E75                      57          RTS                         ;return
00008066                            58  
00008066                            59  
00009000                            60          ORG         $9000
00009000                            61  c       DS.L        1               ;variable c
00009004                            62  
00009004                            63          END         START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AOFFSET             E
BOFFSET             C
C                   9000
COFFSET             8
START               8000
SUMSQUARED          801A
XOFFSET             FFFFFFFC
YOFFSET             FFFFFFF8
ZOFFSET             FFFFFFF4
